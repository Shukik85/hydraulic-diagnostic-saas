version: '3.8'

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
      POSTGRES_DB: hydraulic_diagnostic
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      DJANGO_SETTINGS_MODULE: core.settings
      DATABASE_URL: postgresql://postgres:password123@db:5432/hydraulic_diagnostic
      REDIS_URL: redis://redis:6379/0
      AI_REDIS_URL: redis://redis:6379/1
      SECRET_KEY: dev-secret-key
      DEBUG: "True"
      ALLOWED_HOSTS: localhost,127.0.0.1
    volumes:
      - ./backend:/app/backend
      - ./backend/logs:/app/backend/logs
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["bash", "-lc", ". /opt/venv/bin/activate && celery -A core worker -l info"]
    working_dir: /app/backend
    environment:
      DJANGO_SETTINGS_MODULE: core.settings
      DATABASE_URL: postgresql://postgres:password123@db:5432/hydraulic_diagnostic
      REDIS_URL: redis://redis:6379/0
      AI_REDIS_URL: redis://redis:6379/1
      SECRET_KEY: dev-secret-key
      DEBUG: "True"
    volumes:
      - ./backend:/app/backend
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["bash", "-lc", ". /opt/venv/bin/activate && celery -A core beat -l info"]
    working_dir: /app/backend
    environment:
      DJANGO_SETTINGS_MODULE: core.settings
      DATABASE_URL: postgresql://postgres:password123@db:5432/hydraulic_diagnostic
      REDIS_URL: redis://redis:6379/0
      AI_REDIS_URL: redis://redis:6379/1
      SECRET_KEY: dev-secret-key
      DEBUG: "True"
    volumes:
      - ./backend:/app/backend
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
