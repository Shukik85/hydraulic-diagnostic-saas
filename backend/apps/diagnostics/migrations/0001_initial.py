# Generated by Django 5.1.4 on 2025-10-12 15:06

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="HydraulicSystem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=200, verbose_name="Название системы"),
                ),
                (
                    "system_type",
                    models.CharField(
                        choices=[
                            ("industrial", "Промышленная"),
                            ("mobile", "Мобильная"),
                            ("marine", "Морская"),
                            ("aviation", "Авиационная"),
                        ],
                        max_length=50,
                        verbose_name="Тип системы",
                    ),
                ),
                (
                    "location",
                    models.CharField(max_length=200, verbose_name="Местоположение"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Активна"),
                            ("maintenance", "На обслуживании"),
                            ("inactive", "Неактивна"),
                            ("faulty", "Неисправна"),
                        ],
                        default="active",
                        max_length=50,
                        verbose_name="Статус",
                    ),
                ),
                (
                    "max_pressure",
                    models.FloatField(verbose_name="Максимальное давление (бар)"),
                ),
                ("flow_rate", models.FloatField(verbose_name="Расход (л/мин)")),
                (
                    "temperature_range",
                    models.CharField(max_length=50, verbose_name="Диапазон температур"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Владелец",
                    ),
                ),
            ],
            options={
                "verbose_name": "Гидравлическая система",
                "verbose_name_plural": "Гидравлические системы",
                "db_table": "hydraulic_systems",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="DiagnosticReport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="Заголовок")),
                ("description", models.TextField(verbose_name="Описание")),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("info", "Информация"),
                            ("warning", "Предупреждение"),
                            ("error", "Ошибка"),
                            ("critical", "Критическое"),
                        ],
                        max_length=20,
                        verbose_name="Уровень серьезности",
                    ),
                ),
                (
                    "ai_analysis",
                    models.TextField(blank=True, null=True, verbose_name="Анализ ИИ"),
                ),
                (
                    "recommendations",
                    models.TextField(
                        blank=True, null=True, verbose_name="Рекомендации"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "resolved_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Дата решения"
                    ),
                ),
                (
                    "system",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reports",
                        to="diagnostics.hydraulicsystem",
                        verbose_name="Система",
                    ),
                ),
            ],
            options={
                "verbose_name": "Отчет диагностики",
                "verbose_name_plural": "Отчеты диагностики",
                "db_table": "diagnostic_reports",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="SensorData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sensor_type",
                    models.CharField(
                        choices=[
                            ("pressure", "Датчик давления"),
                            ("temperature", "Датчик температуры"),
                            ("flow", "Датчик расхода"),
                            ("vibration", "Датчик вибрации"),
                            ("level", "Датчик уровня"),
                        ],
                        max_length=50,
                        verbose_name="Тип датчика",
                    ),
                ),
                ("value", models.FloatField(verbose_name="Значение")),
                (
                    "unit",
                    models.CharField(max_length=20, verbose_name="Единица измерения"),
                ),
                (
                    "timestamp",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Время измерения"
                    ),
                ),
                (
                    "is_critical",
                    models.BooleanField(
                        default=False, verbose_name="Критическое значение"
                    ),
                ),
                (
                    "warning_message",
                    models.TextField(
                        blank=True, null=True, verbose_name="Предупреждение"
                    ),
                ),
                (
                    "system",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sensor_data",
                        to="diagnostics.hydraulicsystem",
                        verbose_name="Система",
                    ),
                ),
            ],
            options={
                "verbose_name": "Данные датчика",
                "verbose_name_plural": "Данные датчиков",
                "db_table": "sensor_data",
                "ordering": ["-timestamp"],
            },
        ),
    ]
