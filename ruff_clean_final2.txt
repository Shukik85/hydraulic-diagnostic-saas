backend\apps\diagnostics\admin.py:17:20: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\diagnostics\admin.py:30:19: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\diagnostics\admin.py:38:21: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\diagnostics\admin.py:40:23: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\diagnostics\admin.py:77:15: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\diagnostics\admin.py:83:23: DTZ005 `datetime.datetime.now()` called without a `tz` argument
backend\apps\diagnostics\admin.py:128:24: DTZ005 `datetime.datetime.now()` called without a `tz` argument
backend\apps\diagnostics\admin.py:160:61: DTZ005 `datetime.datetime.now()` called without a `tz` argument
backend\apps\diagnostics\admin.py:179:23: DTZ005 `datetime.datetime.now()` called without a `tz` argument
backend\apps\diagnostics\admin.py:204:20: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\diagnostics\admin.py:213:19: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\diagnostics\admin.py:221:21: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\diagnostics\admin.py:228:23: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\diagnostics\admin.py:251:15: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\diagnostics\admin.py:272:20: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\diagnostics\admin.py:281:19: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\diagnostics\admin.py:288:21: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\diagnostics\admin.py:290:23: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\diagnostics\admin.py:321:27: RUF001 String contains ambiguous `ℹ` (INFORMATION SOURCE). Did you mean `i` (LATIN SMALL LETTER I)?
backend\apps\diagnostics\admin.py:380:15: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\diagnostics\management\commands\generate_test_data.py:99:31: DTZ005 `datetime.datetime.now()` called without a `tz` argument
backend\apps\diagnostics\management\commands\generate_test_data.py:193:22: DTZ005 `datetime.datetime.now()` called without a `tz` argument
backend\apps\diagnostics\middleware.py:87:9: SIM102 Use a single `if` statement instead of nested `if` statements
backend\apps\diagnostics\middleware.py:141:17: PLC0415 `import` should be at the top-level of a file
backend\apps\diagnostics\models.py:104:20: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\diagnostics\models.py:105:19: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\diagnostics\models.py:169:20: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\diagnostics\models.py:170:19: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\diagnostics\models.py:270:20: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\diagnostics\models.py:271:19: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\diagnostics\models.py:386:20: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\diagnostics\models.py:387:19: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\diagnostics\models.py:459:42: RUF001 String contains ambiguous `б` (CYRILLIC SMALL LETTER BE). Did you mean `6` (DIGIT SIX)?
backend\apps\diagnostics\models.py:470:41: RUF001 String contains ambiguous `б` (CYRILLIC SMALL LETTER BE). Did you mean `6` (DIGIT SIX)?
backend\apps\diagnostics\models.py:509:20: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\diagnostics\models.py:510:19: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\diagnostics\models.py:595:20: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\diagnostics\models.py:596:19: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\diagnostics\models.py:689:20: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\diagnostics\models.py:690:19: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\diagnostics\models.py:811:20: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\diagnostics\models.py:812:19: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\diagnostics\rag_system.py:26:24: PTH118 `os.path.join()` should be replaced by `Path` with `/` operator
backend\apps\diagnostics\rag_system.py:98:69: RUF001 String contains ambiguous `б` (CYRILLIC SMALL LETTER BE). Did you mean `6` (DIGIT SIX)?
backend\apps\diagnostics\rag_system.py:99:40: RUF001 String contains ambiguous `б` (CYRILLIC SMALL LETTER BE). Did you mean `6` (DIGIT SIX)?
backend\apps\diagnostics\rag_system.py:99:106: RUF001 String contains ambiguous `б` (CYRILLIC SMALL LETTER BE). Did you mean `6` (DIGIT SIX)?
backend\apps\diagnostics\serializers.py:36:18: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\diagnostics\serializers.py:41:5: D205 1 blank line required between summary line and description
backend\apps\diagnostics\serializers.py:55:18: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\diagnostics\serializers.py:56:28: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\diagnostics\serializers.py:57:24: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\diagnostics\serializers.py:67:18: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\diagnostics\serializers.py:68:28: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\diagnostics\serializers.py:81:18: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\diagnostics\serializers.py:95:28: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\diagnostics\serializers.py:150:18: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\diagnostics\serializers.py:163:28: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\diagnostics\serializers.py:193:5: D205 1 blank line required between summary line and description
backend\apps\diagnostics\services.py:11:5: D205 1 blank line required between summary line and description
backend\apps\diagnostics\services.py:16:55: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\diagnostics\services.py:17:49: RUF003 Comment contains ambiguous `б` (CYRILLIC SMALL LETTER BE). Did you mean `6` (DIGIT SIX)?
backend\apps\diagnostics\services.py:158:43: RUF002 Docstring contains ambiguous `б` (CYRILLIC SMALL LETTER BE). Did you mean `6` (DIGIT SIX)?
backend\apps\diagnostics\signals.py:16:5: ARG001 Unused function argument: `sender`
backend\apps\diagnostics\signals.py:19:7: ARG001 Unused function argument: `kwargs`
backend\apps\diagnostics\signals.py:21:5: D205 1 blank line required between summary line and description
backend\apps\diagnostics\signals.py:38:5: ARG001 Unused function argument: `sender`
backend\apps\diagnostics\signals.py:38:65: ARG001 Unused function argument: `kwargs`
backend\apps\diagnostics\signals.py:57:5: ARG001 Unused function argument: `sender`
backend\apps\diagnostics\signals.py:57:70: ARG001 Unused function argument: `kwargs`
backend\apps\diagnostics\tests.py:22:10: ARG001 Unused function argument: `db`
backend\apps\diagnostics\tests\test_ai_engine.py:34:22: DTZ005 `datetime.datetime.now()` called without a `tz` argument
backend\apps\diagnostics\tests\test_ai_engine.py:37:31: DTZ005 `datetime.datetime.now()` called without a `tz` argument
backend\apps\diagnostics\tests\test_timescale.py:236:13: PT017 Found assertion on exception `e` in `except` block, use `pytest.raises()` instead
backend\apps\diagnostics\tests\test_timescale.py:247:9: PLC0415 `import` should be at the top-level of a file
backend\apps\diagnostics\tests\test_timescale.py:287:9: PLC0415 `import` should be at the top-level of a file
backend\apps\diagnostics\timescale_tasks.py:33:5: ARG001 Unused function argument: `chunk_interval`
backend\apps\diagnostics\timescale_tasks.py:103:13: B012 `return` inside `finally` blocks cause exceptions to be silenced
backend\apps\diagnostics\timescale_tasks.py:160:13: B012 `return` inside `finally` blocks cause exceptions to be silenced
backend\apps\diagnostics\views.py:31:26: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\diagnostics\views.py:33:23: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\diagnostics\views.py:42:24: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\diagnostics\views.py:43:21: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\diagnostics\views.py:44:23: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\diagnostics\views.py:45:16: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\diagnostics\views.py:121:24: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\diagnostics\views.py:122:21: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\diagnostics\views.py:123:23: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\diagnostics\views.py:124:16: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\diagnostics\views.py:133:26: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\diagnostics\views.py:135:23: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\diagnostics\views.py:136:24: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\diagnostics\views.py:137:23: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\diagnostics\views.py:138:16: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\diagnostics\views.py:147:24: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\diagnostics\views.py:148:21: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\diagnostics\views.py:149:23: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\diagnostics\views.py:150:16: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\diagnostics\websocket_consumers.py:44:34: DTZ005 `datetime.datetime.now()` called without a `tz` argument
backend\apps\diagnostics\websocket_consumers.py:146:43: DTZ005 `datetime.datetime.now()` called without a `tz` argument
backend\apps\diagnostics\websocket_consumers.py:242:30: DTZ005 `datetime.datetime.now()` called without a `tz` argument
backend\apps\diagnostics\websocket_consumers.py:399:30: DTZ005 `datetime.datetime.now()` called without a `tz` argument
backend\apps\diagnostics\websocket_consumers.py:413:56: DTZ005 `datetime.datetime.now()` called without a `tz` argument
backend\apps\diagnostics\websocket_consumers.py:425:13: PLC0415 `import` should be at the top-level of a file
backend\apps\diagnostics\websocket_consumers.py:481:27: DTZ005 `datetime.datetime.now()` called without a `tz` argument
backend\apps\diagnostics\websocket_consumers.py:535:22: DTZ005 `datetime.datetime.now()` called without a `tz` argument
backend\apps\rag_assistant\admin.py:10:20: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\rag_assistant\admin.py:18:19: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\rag_assistant\admin.py:19:21: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\rag_assistant\admin.py:20:16: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\rag_assistant\admin.py:28:20: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\rag_assistant\admin.py:29:21: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\rag_assistant\admin.py:30:16: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\rag_assistant\admin.py:35:20: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\rag_assistant\admin.py:36:21: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\rag_assistant\admin.py:37:16: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\rag_assistant\apps.py:46:18: RUF001 String contains ambiguous `ℹ` (INFORMATION SOURCE). Did you mean `i` (LATIN SMALL LETTER I)?
backend\apps\rag_assistant\llm_factory.py:11:18: PGH003 Use specific rule codes when ignoring type issues
backend\apps\rag_assistant\llm_factory.py:12:24: PGH003 Use specific rule codes when ignoring type issues
backend\apps\rag_assistant\middleware.py:25:5: D205 1 blank line required between summary line and description
backend\apps\rag_assistant\middleware.py:208:5: D205 1 blank line required between summary line and description
backend\apps\rag_assistant\models.py:12:22: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\rag_assistant\models.py:18:24: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\rag_assistant\models.py:39:19: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\rag_assistant\models.py:92:19: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\rag_assistant\optimized_views.py:39:5: D205 1 blank line required between summary line and description
backend\apps\rag_assistant\optimized_views.py:48:23: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\rag_assistant\optimized_views.py:53:24: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\rag_assistant\optimized_views.py:54:21: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\rag_assistant\optimized_views.py:55:23: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\rag_assistant\optimized_views.py:56:16: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\rag_assistant\optimized_views.py:57:24: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\rag_assistant\optimized_views.py:78:9: SIM102 Use a single `if` statement instead of nested `if` statements
backend\apps\rag_assistant\optimized_views.py:204:23: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\rag_assistant\optimized_views.py:209:21: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\rag_assistant\optimized_views.py:210:23: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\rag_assistant\optimized_views.py:211:16: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\rag_assistant\optimized_views.py:298:5: D205 1 blank line required between summary line and description
backend\apps\rag_assistant\optimized_views.py:304:23: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\rag_assistant\optimized_views.py:305:24: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\rag_assistant\optimized_views.py:306:23: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\rag_assistant\optimized_views.py:307:16: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\rag_assistant\optimized_views.py:308:26: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\rag_assistant\rag_core.py:12:15: PGH003 Use specific rule codes when ignoring type issues
backend\apps\rag_assistant\rag_core.py:50:14: PTH123 `open()` should be replaced by `Path.open()`
backend\apps\rag_assistant\rag_core.py:55:14: PTH123 `open()` should be replaced by `Path.open()`
backend\apps\rag_assistant\rag_core.py:68:14: PTH123 `open()` should be replaced by `Path.open()`
backend\apps\rag_assistant\rag_core.py:70:14: PTH123 `open()` should be replaced by `Path.open()`
backend\apps\rag_assistant\rag_service.py:178:9: PLC0415 `import` should be at the top-level of a file
backend\apps\rag_assistant\rag_service.py:202:9: PLC0415 `import` should be at the top-level of a file
backend\apps\rag_assistant\rag_service.py:254:13: B904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
backend\apps\rag_assistant\rag_service.py:318:9: PTH108 `os.unlink()` should be replaced by `Path.unlink()`
backend\apps\rag_assistant\rag_service.py:328:12: PTH110 `os.path.exists()` should be replaced by `Path.exists()`
backend\apps\rag_assistant\rag_service.py:329:13: PTH108 `os.unlink()` should be replaced by `Path.unlink()`
backend\apps\rag_assistant\serializers.py:12:18: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\rag_assistant\serializers.py:22:28: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\rag_assistant\serializers.py:32:18: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\rag_assistant\serializers.py:44:28: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\rag_assistant\serializers.py:64:18: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\rag_assistant\serializers.py:75:28: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\rag_assistant\signals.py:15:22: ARG001 Unused function argument: `sender`
backend\apps\rag_assistant\signals.py:15:51: ARG001 Unused function argument: `kwargs`
backend\apps\rag_assistant\signals.py:26:22: ARG001 Unused function argument: `sender`
backend\apps\rag_assistant\signals.py:26:42: ARG001 Unused function argument: `kwargs`
backend\apps\rag_assistant\signals.py:36:24: ARG001 Unused function argument: `sender`
backend\apps\rag_assistant\signals.py:36:53: ARG001 Unused function argument: `kwargs`
backend\apps\rag_assistant\signals.py:43:24: ARG001 Unused function argument: `sender`
backend\apps\rag_assistant\signals.py:43:44: ARG001 Unused function argument: `kwargs`
backend\apps\rag_assistant\signals.py:50:22: ARG001 Unused function argument: `sender`
backend\apps\rag_assistant\signals.py:50:51: ARG001 Unused function argument: `kwargs`
backend\apps\rag_assistant\tasks.py:33:5: D417 Missing argument description in the docstring for `task_performance_monitor`: `**metadata`
backend\apps\rag_assistant\tasks.py:172:13: B904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
backend\apps\rag_assistant\tasks_build.py:24:5: ARG001 Unused function argument: `self`
backend\apps\rag_assistant\tasks_build.py:30:26: DTZ003 `datetime.datetime.utcnow()` used
backend\apps\rag_assistant\urls.py:27:17: ARG001 Unused function argument: `request`
backend\apps\rag_assistant\urls.py:29:5: PLC0415 `import` should be at the top-level of a file
backend\apps\rag_assistant\urls.py:31:5: PLC0415 `import` should be at the top-level of a file
backend\apps\rag_assistant\views.py:43:26: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\rag_assistant\views.py:44:23: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\rag_assistant\views.py:45:21: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\rag_assistant\views.py:46:23: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\rag_assistant\views.py:47:16: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\rag_assistant\views.py:71:26: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\rag_assistant\views.py:182:26: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\rag_assistant\views.py:183:23: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\rag_assistant\views.py:184:23: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\rag_assistant\views.py:185:16: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\rag_assistant\views.py:186:21: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\apps\rag_assistant\views.py:203:26: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
backend\core\asgi.py:11:52: PGH003 Use specific rule codes when ignoring type issues
backend\core\asgi.py:12:65: PGH003 Use specific rule codes when ignoring type issues
backend\core\asgi.py:14:43: PGH003 Use specific rule codes when ignoring type issues
backend\core\celery.py:77:5: ARG001 Unused function argument: `sender`
backend\core\celery.py:77:43: ARG001 Unused function argument: `args`
backend\core\celery.py:77:54: ARG001 Unused function argument: `kwargs`
backend\core\celery.py:77:69: ARG001 Unused function argument: `kwds`
backend\core\celery.py:84:5: ARG001 Unused function argument: `sender`
backend\core\celery.py:87:5: ARG001 Unused function argument: `args`
backend\core\celery.py:88:5: ARG001 Unused function argument: `kwargs`
backend\core\celery.py:89:5: ARG001 Unused function argument: `retval`
backend\core\celery.py:91:7: ARG001 Unused function argument: `kwds`
backend\core\celery.py:98:48: ARG001 Unused function argument: `traceback`
backend\core\celery.py:98:64: ARG001 Unused function argument: `einfo`
backend\core\celery.py:98:78: ARG001 Unused function argument: `kwds`
backend\core\health_checks.py:184:9: PLC0415 `import` should be at the top-level of a file
backend\core\health_checks.py:203:5: D205 1 blank line required between summary line and description
backend\core\health_checks.py:290:21: ARG001 Unused function argument: `request`
backend\core\health_checks.py:291:5: D205 1 blank line required between summary line and description
backend\core\health_checks.py:312:20: ARG001 Unused function argument: `request`
backend\core\pagination.py:16:5: D205 1 blank line required between summary line and description
backend\core\pagination.py:63:13: B904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
backend\core\pagination.py:148:5: D205 1 blank line required between summary line and description
backend\core\pagination.py:156:5: D205 1 blank line required between summary line and description
backend\core\settings.py:279:8: RUF003 Comment contains ambiguous `б` (CYRILLIC SMALL LETTER BE). Did you mean `6` (DIGIT SIX)?
backend\core\urls.py:47:20: ARG001 Unused function argument: `request`
backend\core\urls.py:47:29: ARG001 Unused function argument: `exception`
backend\core\urls.py:57:20: ARG001 Unused function argument: `request`
backend\manage.py:11:9: PLC0415 `import` should be at the top-level of a file
backend\test_rag.py:17:12: PTH120 `os.path.dirname()` should be replaced by `Path.parent`
backend\tests\test_serializers.py:13:9: PLC0415 `import` should be at the top-level of a file
Found 219 errors.
