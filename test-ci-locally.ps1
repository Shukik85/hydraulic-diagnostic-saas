# PowerShell 7.5 —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ CI
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .\test-ci-locally.ps1

#Requires -Version 7.5

$ErrorActionPreference = "Stop"

Write-Host "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ CI –ª–æ–∫–∞–ª—å–Ω–æ..." -ForegroundColor Cyan
Write-Host ""

# –ü–µ—Ä–µ—Ö–æ–¥ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é backend
Push-Location backend

try {
    Write-Host "1Ô∏è‚É£ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è..." -ForegroundColor Yellow
    pip install black isort flake8 mypy pytest pytest-django pytest-cov
    
    Write-Host ""
    Write-Host "2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ Black (—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ)..." -ForegroundColor Yellow
    $blackResult = black --check . 2>&1
    if ($LASTEXITCODE -ne 0) {
        Write-Host "‚ùå Black failed. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: black backend/" -ForegroundColor Red
        Write-Host $blackResult -ForegroundColor Red
        exit 1
    }
    Write-Host "‚úÖ Black passed" -ForegroundColor Green
    
    Write-Host ""
    Write-Host "3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ isort (–∏–º–ø–æ—Ä—Ç—ã)..." -ForegroundColor Yellow
    $isortResult = isort --check-only . 2>&1
    if ($LASTEXITCODE -ne 0) {
        Write-Host "‚ùå isort failed. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: isort backend/" -ForegroundColor Red
        Write-Host $isortResult -ForegroundColor Red
        exit 1
    }
    Write-Host "‚úÖ isort passed" -ForegroundColor Green
    
    Write-Host ""
    Write-Host "4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ flake8 (–ª–∏–Ω—Ç–∏–Ω–≥)..." -ForegroundColor Yellow
    $flake8Result = flake8 . --max-line-length=100 --exclude=.venv,.mypy_cache,migrations 2>&1
    if ($LASTEXITCODE -ne 0) {
        Write-Host "‚ùå flake8 failed" -ForegroundColor Red
        Write-Host $flake8Result -ForegroundColor Red
        exit 1
    }
    Write-Host "‚úÖ flake8 passed" -ForegroundColor Green
    
    Write-Host ""
    Write-Host "5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ mypy (—Ç–∏–ø—ã)..." -ForegroundColor Yellow
    $mypyResult = mypy . 2>&1
    if ($LASTEXITCODE -ne 0) {
        Write-Host "‚ö†Ô∏è mypy warnings (not blocking)" -ForegroundColor Yellow
        Write-Host $mypyResult -ForegroundColor Yellow
    } else {
        Write-Host "‚úÖ mypy passed" -ForegroundColor Green
    }
    
    Write-Host ""
    Write-Host "6Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–π..." -ForegroundColor Yellow
    $migrationsResult = python manage.py makemigrations --dry-run --check 2>&1
    if ($LASTEXITCODE -ne 0) {
        Write-Host "‚ùå –ï—Å—Ç—å –Ω–µ—Å–æ–∑–¥–∞–Ω–Ω—ã–µ –º–∏–≥—Ä–∞—Ü–∏–∏" -ForegroundColor Red
        Write-Host $migrationsResult -ForegroundColor Red
        exit 1
    }
    Write-Host "‚úÖ Migrations check passed" -ForegroundColor Green
    
    Write-Host ""
    Write-Host "7Ô∏è‚É£ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤..." -ForegroundColor Yellow
    $testResult = pytest -q --disable-warnings --maxfail=1 2>&1
    if ($LASTEXITCODE -ne 0) {
        Write-Host "‚ùå Tests failed" -ForegroundColor Red
        Write-Host $testResult -ForegroundColor Red
        exit 1
    }
    Write-Host "‚úÖ Tests passed" -ForegroundColor Green
    
    Write-Host ""
    Write-Host "üéâ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã! CI –¥–æ–ª–∂–µ–Ω –ø—Ä–æ–π—Ç–∏ —É—Å–ø–µ—à–Ω–æ." -ForegroundColor Green
    
} catch {
    Write-Host "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: $_" -ForegroundColor Red
    exit 1
} finally {
    # –í–æ–∑–≤—Ä–∞—Ç –≤ –∏—Å—Ö–æ–¥–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    Pop-Location
}

Write-Host ""
Write-Host "‚ú® –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞." -ForegroundColor Cyan
