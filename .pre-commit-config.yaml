# Конфигурация pre-commit hooks для Django 5.2.7 проекта (2025)
# Обеспечивает качество кода, безопасность и совместимость

exclude: |
  (?x)^(
      migrations/.*|
      .*\.min\.(js|css)$|
      staticfiles/.*|
      static/.*|
      media/.*|
      node_modules/.*|
      \.venv/.*|
      venv/.*
  )$

default_stages: [commit]
fail_fast: false

repos:
  # Базовые хуки pre-commit
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]
      - id: end-of-file-fixer
      - id: check-yaml
        args: [--allow-multiple-documents]
      - id: check-added-large-files
        args: [--maxkb=1024]
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: check-json
      - id: check-toml
      - id: check-xml
      - id: debug-statements
      - id: check-builtin-literals
      - id: check-docstring-first
      - id: requirements-txt-fixer

  # Обновление Django кода до актуальных практик
  - repo: https://github.com/adamchainz/django-upgrade
    rev: "1.25.0"
    hooks:
      - id: django-upgrade
        args: [--target-version, "5.2"]

  # Безопасность: проверка зависимостей на уязвимости
  - repo: https://github.com/gitguardian/ggshield
    rev: v1.32.1
    hooks:
      - id: ggshield
        language: python
        stages: [commit]

  # Безопасность: статический анализ безопасности Python кода
  - repo: https://github.com/pycqa/bandit
    rev: 1.8.3
    hooks:
      - id: bandit
        args: [-c, .bandit, -r, .]
        additional_dependencies: ["bandit[toml]"]

  # Сортировка импортов
  - repo: https://github.com/pycqa/isort
    rev: 7.0.0
    hooks:
      - id: isort
        args: [--profile=black, --line-length=88, --multi-line=3, --trailing-comma]

  # Форматирование кода
  - repo: https://github.com/psf/black
    rev: 25.9.0
    hooks:
      - id: black
        args: [--line-length=88, --target-version=py310, --target-version=py311, --target-version=py312, --target-version=py313]
        language_version: python3

  # Проверка стиля кода и потенциальных ошибок
  - repo: https://github.com/pycqa/flake8
    rev: 7.1.1
    hooks:
      - id: flake8
        args: [--max-line-length=88, --extend-ignore=E203,E501,W503,E701]
        additional_dependencies:
          - flake8-bugbear>=24.10.31
          - flake8-comprehensions>=3.15.0
          - flake8-django>=1.4.0
          - flake8-docstrings>=1.7.0
          - flake8-import-order>=0.18.2
          - flake8-pie>=0.16.0
          - flake8-simplify>=0.21.0

  # Статическая проверка типов с поддержкой Django
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.18.2
    hooks:
      - id: mypy
        args: [--ignore-missing-imports, --check-untyped-defs]
        additional_dependencies:
          - django-stubs[compatible-mypy]==5.2.7
          - djangorestframework-stubs[compatible-mypy]>=3.15.1
          - celery-types>=0.22.0
          - types-redis>=4.6.0.20241004
          - types-requests>=2.32.0.20241016

  # Линтинг и форматирование HTML шаблонов Django
  - repo: https://github.com/djlint/djlint
    rev: v1.36.3
    hooks:
      - id: djlint-reformat-django
        args: [--indent=2, --profile=django]
        files: \.(html|htm)$
      - id: djlint-django
        args: [--profile=django]
        files: \.(html|htm)$

  # Проверка Docker файлов
  - repo: https://github.com/hadolint/hadolint
    rev: v2.13.1-beta
    hooks:
      - id: hadolint-docker
        args: [--ignore, DL3008, --ignore, DL3009, --ignore, DL3015]

  # Форматирование YAML
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8
    hooks:
      - id: prettier
        types_or: [yaml, markdown]
        args: [--tab-width=2]

  # Проверка переменных окружения в .env файлах
  - repo: https://github.com/dotenv-linter/dotenv-linter
    rev: v3.3.0
    hooks:
      - id: dotenv-linter

ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: [ggshield]
  submodules: false