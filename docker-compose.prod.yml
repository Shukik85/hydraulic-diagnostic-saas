version: "3.9"

services:
  db:
    image: postgres:15
    container_name: hdx-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - hdx-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: hdx-redis
    restart: unless-stopped
    networks:
      - hdx-net
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: prod
    container_name: hdx-backend
    env_file:
      - .env
    environment:
      DJANGO_SETTINGS_MODULE: core.settings
      DEBUG: 0
      SECURE_SSL_REDIRECT: 1
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - hdx-net

  celery:
    build:
      context: .
      dockerfile: Dockerfile
      target: prod
    container_name: hdx-celery
    command: >
      sh -c "celery -A core worker -l info"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - hdx-net

  beat:
    build:
      context: .
      dockerfile: Dockerfile
      target: prod
    container_name: hdx-celery-beat
    command: >
      sh -c "celery -A core beat -l info"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - hdx-net

  nginx:
    image: nginx:1.25-alpine
    container_name: hdx-nginx
    depends_on:
      - backend
    ports:
      - "80:80"
    volumes:
      - ./deploy/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./backend/staticfiles:/app/staticfiles:ro
      - ./backend/media:/app/media:ro
    networks:
      - hdx-net

volumes:
  pgdata:

networks:
  hdx-net:
